// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Preparation.API.Data;

#nullable disable

namespace Preparation.API.Migrations
{
    [DbContext(typeof(PreparationDBContext))]
    [Migration("20230211191304_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Preparation.API.Entities.Announcement", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LicitationGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("Preparation.API.Entities.Document", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnnouncementGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCertified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DocumentStatusID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Template")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Guid");

                    b.HasIndex("AnnouncementGuid");

                    b.HasIndex("DocumentStatusID");

                    b.HasIndex("DocumentTypeID");

                    b.HasIndex("ReferenceNumber")
                        .IsUnique();

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Preparation.API.Entities.DocumentStatus", b =>
                {
                    b.Property<Guid>("DocumentStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentStatusID");

                    b.ToTable("DocumentStatus");
                });

            modelBuilder.Entity("Preparation.API.Entities.DocumentType", b =>
                {
                    b.Property<Guid>("DocumentTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentTypeID");

                    b.ToTable("DocumentType");
                });

            modelBuilder.Entity("Preparation.API.Entities.Document", b =>
                {
                    b.HasOne("Preparation.API.Entities.Announcement", "Announcement")
                        .WithMany()
                        .HasForeignKey("AnnouncementGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Preparation.API.Entities.DocumentStatus", "DocumentStatus")
                        .WithMany()
                        .HasForeignKey("DocumentStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Preparation.API.Entities.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Announcement");

                    b.Navigation("DocumentStatus");

                    b.Navigation("DocumentType");
                });
#pragma warning restore 612, 618
        }
    }
}
