<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gateway.API</name>
    </assembly>
    <members>
        <member name="T:Gateway.API.Controllers.AdministrationDocumentsController">
            <summary>
            API controller for managing Documents.
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.AdministrationDocumentsController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes a new instance of the DocumentsController class
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.AdministrationDocumentsController.GetDocuments">
            <summary>
            Returns a list of documents.
            </summary>
            <returns>A list of DocumentGetResponseModel, or No Content if no document is found.</returns>
        </member>
        <member name="M:Gateway.API.Controllers.AdministrationDocumentsController.GetDocument(System.String)">
            <summary>
            Returns the document with the specified id.
            </summary>
            <param name="id">The id of the document.</param>
            <returns>The DocumentGetResponseModel with the specified id, or NotFound if the document is not found.</returns>
        </member>
        <member name="M:Gateway.API.Controllers.AdministrationDocumentsController.PatchDocument(System.String,System.Object)">
            <summary>
            Updates the document with the specified id.
            </summary>
            <param name="id">The id of the document to update.</param>
            <param name="requestModel">The DocumentPatchRequestModel with the updated values.</param>
            <returns>The DocumentPatchResponseModel with the updated values, or NotFound if the document is not found.</returns>
        </member>
        <member name="M:Gateway.API.Controllers.AdministrationDocumentsController.PostDocument(System.Object)">
            <summary>
            Creates a new document.
            </summary>
            <param name="postModel">The DocumentPostRequestModel with the values for the new document.</param>
            <returns>The DocumentPostResponseModel for the newly created document.</returns>
        </member>
        <member name="M:Gateway.API.Controllers.AdministrationDocumentsController.DeleteDocument(System.String)">
            <summary>
            Deletes a Document by ID
            </summary>
            <param name="id">The ID of the Document to delete</param>
            <returns>NoContent if the Document is successfully deleted, NotFound if the Document is not found</returns>
        </member>
        <member name="T:Gateway.API.Controllers.CommitteesController">
            <summary>
            Represents the API endpoint for managing committees and their members.
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.CommitteesController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Represents a controller for managing committees.
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.CommitteesController.GetCommittees">
            <summary>
            Returns a list of all committees.
            </summary>
            <returns>A list of committees</returns>
        </member>
        <member name="M:Gateway.API.Controllers.CommitteesController.GetCommittee(System.String)">
            <summary>
            Returns the details of a specific committee.
            </summary>
            <param name="id">The ID of the committee</param>
            <returns>The details of the committee</returns>
        </member>
        <member name="M:Gateway.API.Controllers.CommitteesController.PatchCommittee(System.String,System.Object)">
            <summary>
            Updates the specified committee with the given changes.
            </summary>
            <param name="id">The ID of the committee to update</param>
            <param name="requestModel">The changes to apply to the committee</param>
            <returns>The updated committee</returns>
        </member>
        <member name="M:Gateway.API.Controllers.CommitteesController.PatchCommitteeMember(System.Guid,System.Guid,System.Object)">
            <summary>
            Updates the specified member of a committee with the given changes.
            </summary>
            <param name="id">The ID of the committee to update the member for</param>
            <param name="memberId">The ID of the member to update</param>
            <param name="patchModel">The changes to apply to the member</param>
            <returns>The updated member</returns>
        </member>
        <member name="M:Gateway.API.Controllers.CommitteesController.PostCommittee(System.Object)">
            <summary>
            Creates a new committee.
            </summary>
            <param name="postModel">The model for creating a committee.</param>
            <returns>The created committee.</returns>
        </member>
        <member name="M:Gateway.API.Controllers.CommitteesController.PostCommitteeMember(System.Guid,System.Object)">
            <summary>
            Creates a new committee member for a committee.
            </summary>
            <param name="id">The ID of the committee to which the member belongs.</param>
            <param name="postModel">The model for creating a committee member.</param>
            <returns>The created committee member.</returns>
        </member>
        <member name="M:Gateway.API.Controllers.CommitteesController.DeleteCommittee(System.String)">
            <summary>
            Deletes a committee by ID.
            </summary>
            <param name="id">The ID of the committee to delete.</param>
            <returns>A response indicating the success or failure of the operation.</returns>
        </member>
        <member name="M:Gateway.API.Controllers.CommitteesController.DeleteCommitteeMember(System.Guid,System.Guid)">
            <summary>
            Deletes a committee member by ID.
            </summary>
            <param name="id">The ID of the committee to which the member belongs.</param>
            <param name="memberId">The ID of the member to delete.</param>
            <returns>A response indicating the success or failure of the operation.</returns>
        </member>
        <member name="T:Gateway.API.Controllers.MembersController">
            <summary>
            API controller for managing members.
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.MembersController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes a new instance of the MembersController class with the specified dependencies.
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.MembersController.GetMembers">
            <summary>
            Gets all members.
            </summary>
            <returns>A collection of MemberGetResponseModel objects.</returns>
        </member>
        <member name="M:Gateway.API.Controllers.MembersController.GetMember(System.String)">
            <summary>
            Gets a member with the specified ID.
            </summary>
            <param name="id">The ID of the member to retrieve.</param>
            <returns>A MemberGetResponseModel object representing the retrieved member.</returns>
        </member>
        <member name="M:Gateway.API.Controllers.MembersController.PatchMember(System.String,System.Object)">
            <summary>
            Updates a member with the specified ID.
            </summary>
            <param name="id">The ID of the member to update.</param>
            <param name="requestModel">The MemberPatchRequestModel containing the updates to apply.</param>
            <returns>A MemberPatchResponseModel object representing the updated member.</returns>
        </member>
        <member name="M:Gateway.API.Controllers.MembersController.PostMember(System.Object)">
            <summary>
            Creates a new member.
            </summary>
            <param name="postModel">The MemberPostRequestModel containing the new member data.</param>
            <returns>A MemberPostResponseModel object representing the newly created member.</returns>
        </member>
        <member name="M:Gateway.API.Controllers.MembersController.DeleteMember(System.String)">
            <summary>
            Deletes a member with the specified ID.
            </summary>
            <param name="id">The ID of the member to delete.</param>
        </member>
        <member name="T:Gateway.API.Controllers.Auth.SystemUsersController">
            <summary>
            Controller for managing System Users
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.Auth.SystemUsersController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor for SystemUsersController
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.Auth.SystemUsersController.DeleteSystemUser(System.String)">
            <summary>
            Deletes a system user
            </summary>
            <param name="username">Username of the user to be deleted</param>
            <returns>IActionResult indicating the status of the operation</returns>
            <response code="204">Returns no content</response>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Gateway.API.Controllers.Auth.SystemUsersController.GetSystemUser(System.String)" -->
        <member name="M:Gateway.API.Controllers.Auth.SystemUsersController.GetSystemUsers">
            <summary>
            Gets a list of all system users
            </summary>
            <returns>IActionResult indicating the status of the operation</returns>
            <response code="200">Returns the list of system users</response>
        </member>
        <member name="M:Gateway.API.Controllers.Auth.SystemUsersController.PostSystemUser(System.Object)">
            <summary>
            Adds a new system user
            </summary>
            <param name="requestModel">Request body with user information</param>
            <returns>IActionResult indicating the status of the operation</returns>
            <response code="201">Returns the newly created item</response>
        </member>
        <member name="M:Gateway.API.Controllers.Auth.SystemUsersController.PatchSystemUser(System.String,System.Object)">
            <summary>
            Patches a system user
            </summary>
            <param name="username">Username of the user to update</param>
            <param name="requestModel">Request body with updated user information</param>
            <returns>IActionResult indicating the status of the operation</returns>
            <response code="204">Returns no content</response>
            <response code="404">If the Document is not found</response>
        </member>
        <member name="T:Gateway.API.Controllers.Auth.TokenController">
            <summary>
            Controller for managing JWT resources
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.Auth.TokenController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor for TokenController
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.Auth.TokenController.GenerateToken(System.Object)">
            <summary>
            Generates JWT token based on the given username and password.
            </summary>
            <param name="userParam">Model containing username and password.</param>
            <returns>JWT token response model if the authentication is successful, otherwise returns Bad Request.</returns>
        </member>
        <member name="M:Gateway.API.Controllers.Auth.TokenController.IntrospectToken(System.Object)">
            <summary>
            Introspects the given JWT token.
            </summary>
            <param name="requestModel">Model containing the token to be introspected.</param>
            <returns>SystemUserResponseModel if the token is valid, otherwise returns Bad Request.</returns>
        </member>
        <member name="T:Gateway.API.Controllers.AddressController">
            <summary>
            API controller for managing Addresses.
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.AddressController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor for AddressController
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.AddressController.GetAddresses">
            <summary>
             Get all Addresses from the Bidding service
            </summary>
            <returns> A list of Addresses </returns>
        </member>
        <member name="M:Gateway.API.Controllers.AddressController.GetAddress(System.String)">
            <summary>
            Get an Address by Id from the Bidding service
            </summary>
            <returns> An Address </returns>
            <param name="id"> The Id of the Address to be retrieved </param>
        </member>
        <member name="M:Gateway.API.Controllers.AddressController.PostAddress(System.Object)">
            <summary>
            Post an Address to the Bidding service
            </summary>
            <returns> An Address </returns>
        </member>
        <member name="M:Gateway.API.Controllers.AddressController.PatchAddress(System.String,System.Object)">
            <summary>
            Patch an Address to the Bidding service
            </summary>
            <returns> An Address </returns>
            <param name="id"> The Id of the Address to be patched </param>
        </member>
        <member name="M:Gateway.API.Controllers.AddressController.DeleteAddress(System.String)">
            <summary>
            Delete an Address from the Bidding service
            </summary>
            <params name="id"> The Id of the Address to be deleted </params>
            <returns> A no content response </returns>
            <param name="id"> The Id of the Address to be deleted </param>
        </member>
        <member name="T:Gateway.API.Controllers.BiddingDocumentsController">
            <summary>
            API controller for managing Bidding Documents.
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.BiddingDocumentsController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor for DocumentController
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.BiddingDocumentsController.GetDocuments">
            <summary>
            Get all Documents
            </summary>
            <returns> List of Documents </returns>
            <response code="200">Returns the list of Documents</response>
        </member>
        <member name="M:Gateway.API.Controllers.BiddingDocumentsController.GetDocument(System.String)">
            <summary>
            Get a Document by Id
            </summary>
            <param name="id">Id of the Document</param>
            <returns> A Document </returns>
            <response code="200">Returns the Document</response>
        </member>
        <member name="M:Gateway.API.Controllers.BiddingDocumentsController.PostDocument(System.Object)">
            <summary>
            Create a new Document
            </summary>
            <param name="requestModel">Document to be created</param>
            <returns> A newly created Document </returns>
            <response code="201">Returns the newly created Document</response>
        </member>
        <member name="M:Gateway.API.Controllers.BiddingDocumentsController.PatchDocument(System.String,System.Object)">
            <summary>
            Update a Document
            </summary>
            <param name="id">Id of the Document</param>
            <param name="requestModel">Document to be updated</param>
            <returns> An updated Document </returns>
            <response code="200">Returns the updated Document</response>
        </member>
        <member name="M:Gateway.API.Controllers.BiddingDocumentsController.DeleteDocument(System.String)">
            <summary>
            Delete a Document
            </summary>
            <param name="id">Id of the Document</param>
            <returns> A no content response </returns>
            <response code="204">Returns no content</response>
            <response code="404">If the Document is not found</response>
        </member>
        <member name="T:Gateway.API.Controllers.BiddingOffersController">
            <summary>
            API controller for managing Bidding Offers.
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.BiddingOffersController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor for BiddingOffersController
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.BiddingOffersController.GetBiddingOffers">
            <summary>
            Get all Bidding Offers
            </summary>
            <returns> List of Bidding Offers </returns>
            <response code="200">Returns the list of Bidding Offers</response>
        </member>
        <member name="M:Gateway.API.Controllers.BiddingOffersController.GetBiddingOffer(System.String)">
            <summary>
            Get a Bidding Offer by Id
            </summary>
            <param name="id">Id of the Bidding Offer</param>
            <returns> A Bidding Offer </returns>
            <response code="200">Returns the Bidding Offer</response>
        </member>
        <member name="M:Gateway.API.Controllers.BiddingOffersController.PostBiddingOffer(System.Object)">
            <summary>
            Create a new Bidding Offer
            </summary>
            <param name="requestModel">Bidding Offer to be created</param>
            <returns> A newly created Bidding Offer </returns>
            <response code="201">Returns the newly created Bidding Offer</response>
        </member>
        <member name="M:Gateway.API.Controllers.BiddingOffersController.PatchBiddingOffer(System.String,System.Object)">
            <summary>
            Update a Bidding Offer
            </summary>
            <param name="id">Id of the Bidding Offer</param>
            <param name="requestModel">Bidding Offer to be updated</param>
            <returns>A newly updated Bidding Offer </returns>
            <response code="200">Returns the newly updated Bidding Offer</response>
        </member>
        <member name="M:Gateway.API.Controllers.BiddingOffersController.DeleteBiddingOffer(System.String)">
            <summary>
            Delete a Bidding Offer
            </summary>
            <param name="id">Id of the Bidding Offer</param>
            <returns> A no content response </returns>
            <response code="204">Returns no content </response>
            <response code="404">If the Bidding Offer is not found</response>
        </member>
        <member name="T:Gateway.API.Controllers.BuyerApplicationController">
            <summary>
            API controller for managing Buyer Applications.
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.BuyerApplicationController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor for BuyerApplicationController
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.BuyerApplicationController.GetBuyerApplications">
            <summary>
            Get all Buyer Applications
            </summary>
            <returns> List of Buyer Applications </returns>
            <response code="200">List of Buyer Applications</response>
            <response code="204"> No Buyer Applications found </response>
        </member>
        <member name="M:Gateway.API.Controllers.BuyerApplicationController.GetBuyerApplication(System.String)">
            <summary>
            Get a Buyer Application by Id
            </summary>
            <param name="id">Id of the Buyer Application</param>
            <returns> A Buyer Application </returns>
            <response code="200">Returns the Buyer Application</response>
        </member>
        <member name="M:Gateway.API.Controllers.BuyerApplicationController.PostBuyerApplication(System.Object)">
            <summary>
            Create a new Buyer Application
            </summary>
            <param name="requestModel">Buyer Application to be created</param>
            <returns> A newly created Buyer Application </returns>
            <response code="201">Returns the newly created Buyer Application</response>
        </member>
        <member name="M:Gateway.API.Controllers.BuyerApplicationController.PatchBuyerApplication(System.String,System.Object)">
            <summary>
            Update a Buyer Application
            </summary>
            <param name="id">Id of the Buyer Application</param>
            <param name="requestModel">Buyer Application to be updated</param>
            <returns> A newly updated Buyer Application </returns>
            <response code="200">Returns the newly updated Buyer Application</response>
        </member>
        <member name="M:Gateway.API.Controllers.BuyerApplicationController.DeleteBuyerApplication(System.String)">
            <summary>
            Delete a Buyer Application
            </summary>
            <param name="id">Id of the Buyer Application</param>
            <returns> A no content response </returns>
            <response code="204"> Buyer Application deleted </response>
            <response code="404"> Buyer Application not found </response>
        </member>
        <member name="T:Gateway.API.Controllers.PublicBiddingController">
            <summary>
            API controller for managing Documents.
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.PublicBiddingController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor for PublicBiddingController
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.PublicBiddingController.GetPublicBiddings">
            <summary>
            Get all public biddings
            </summary>
            <returns> List of public biddings </returns>
            <response code="200"> List of public biddings </response>
        </member>
        <member name="M:Gateway.API.Controllers.PublicBiddingController.GetPublicBidding(System.String)">
            <summary>
            Get a public bidding by Id
            </summary>
            <param name="id">Id of the public bidding</param>
            <returns> A public bidding </returns>
            <response code="200">Returns the public bidding</response>
        </member>
        <member name="M:Gateway.API.Controllers.PublicBiddingController.PostPublicBidding(System.Object)">
            <summary>
            Create a new public bidding
            </summary>
            <param name="requestModel">public bidding to be created</param>
            <returns> A newly created public bidding </returns>
            <response code="201">Returns the newly created public bidding</response>
        </member>
        <member name="M:Gateway.API.Controllers.PublicBiddingController.PatchPublicBidding(System.String,System.Object)">
            <summary>
            Update a public bidding
            </summary>
            <param name="id">Id of the public bidding</param>
            <param name="requestModel">public bidding to be updated</param>
            <returns> A newly updated public bidding </returns>
            <response code="200">Returns the newly updated public bidding</response>
        </member>
        <member name="M:Gateway.API.Controllers.PublicBiddingController.DeletePublicBidding(System.String)">
            <summary>
            Delete a public bidding
            </summary>
            <param name="id">Id of the public bidding</param>
            <returns> A no content response </returns>
            <response code="204">Returns no content</response>
            <response code="404">Returns not found</response>
        </member>
        <member name="T:Gateway.API.Controllers.PublicBiddingLotController">
            <summary>
            API controller for managing Documents.
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.PublicBiddingLotController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor for PublicBiddingLotController
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.PublicBiddingLotController.GetPublicBiddingLots">
            <summary>
            Get all public bidding lots
            </summary>
            <returns> List of public bidding lots </returns>
            <response code="200"> List of public bidding lots </response>
        </member>
        <member name="M:Gateway.API.Controllers.PublicBiddingLotController.GetPublicBiddingLot(System.String)">
            <summary>
            Get a public bidding lot by Id
            </summary>
            <param name="id">Id of the public bidding lot</param>
            <returns> A public bidding lot </returns>
            <response code="200">Returns the public bidding lot</response>
        </member>
        <member name="M:Gateway.API.Controllers.PublicBiddingLotController.PostPublicBiddingLot(System.Object)">
            <summary>
            Create a new public bidding lot
            </summary>
            <param name="requestModel">public bidding lot to be created</param>
            <returns> A newly created public bidding lot </returns>
            <response code="201">Returns the newly created public bidding lot</response>
        </member>
        <member name="M:Gateway.API.Controllers.PublicBiddingLotController.PatchPublicBiddingLot(System.String,System.Object)">
            <summary>
            Update a public bidding lot
            </summary>
            <param name="id">Id of the public bidding lot</param>
            <param name="requestModel">public bidding lot to be updated</param>
            <returns> A newly updated public bidding lot </returns>
            <response code="200">Returns the newly updated public bidding lot</response>
        </member>
        <member name="M:Gateway.API.Controllers.PublicBiddingLotController.DeletePublicBiddingLot(System.String)">
            <summary>
            Delete a public bidding lot
            </summary>
            <param name="id">Id of the public bidding lot</param>
            <returns> A no content response </returns>
            <response code="204">Returns a no content response</response>
            <response code="404">If the public bidding lot is not found</response>
        </member>
        <member name="T:Gateway.API.Controllers.RepresentativeController">
            <summary>
            API controller for managing Documents.
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.RepresentativeController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor for RepresentativeController
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.RepresentativeController.GetRepresentatives">
            <summary>
            Get all representatives
            </summary>
            <returns> List of representatives </returns>
            <response code="200"> List of representatives </response>
        </member>
        <member name="M:Gateway.API.Controllers.RepresentativeController.GetRepresentative(System.String)">
            <summary>
            Get a representative by Id
            </summary>
            <param name="id">Id of the representative</param>
            <returns> A representative </returns>
            <response code="200">Returns the representative</response>
        </member>
        <member name="M:Gateway.API.Controllers.RepresentativeController.PostRepresentative(System.Object)">
            <summary>
            Create a new representative
            </summary>
            <param name="requestModel">representative to be created</param>
            <returns> A newly created representative </returns>
            <response code="201">Returns the newly created representative</response>
        </member>
        <member name="M:Gateway.API.Controllers.RepresentativeController.PatchRepresentative(System.String,System.Object)">
            <summary>
            Update a representative
            </summary>
            <param name="id">Id of the representative</param>
            <param name="requestModel">representative to be updated</param>
            <returns> A updated representative </returns>
            <response code="200">Returns the updated representative</response>
        </member>
        <member name="M:Gateway.API.Controllers.RepresentativeController.DeleteRepresentative(System.String)">
            <summary>
            Delete a representative
            </summary>
            <param name="id">Id of the representative</param>
            <returns> A no content response </returns>
            <response code="204">Returns a no content response</response>
            <response code="404">If the representative is not found</response>
        </member>
        <member name="T:Gateway.API.Controllers.Complaint.ComplaintsController">
            <summary>
            Controller for managing Complaints
            </summary>
        </member>
        <member name="M:Gateway.API.Controllers.Complaint.ComplaintsController.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor for ComplaintController
            </summary>
            <param name="httpClient">Instance of HttpClient to be used for making requests</param>
        </member>
        <member name="M:Gateway.API.Controllers.Complaint.ComplaintsController.DeleteSystemUser(System.String)">
            <summary>
            Deletes a complaint
            </summary>
            <param name="id">id of the complaint to be deleted</param>
            <returns>IActionResult indicating the status of the operation</returns>
            <response code="204">Returns no content</response>
            <response code="404">If the SystemUser is not found</response>
        </member>
        <member name="M:Gateway.API.Controllers.Complaint.ComplaintsController.GetComplaint(System.String)">
            <summary>
            Gets a complaint
            </summary>
            <param name="id">Id of the complaint to retrieve</param>
            <returns>IActionResult indicating the status of the operation</returns>
            <response code="200">Returns the complaint</response>
        </member>
        <member name="M:Gateway.API.Controllers.Complaint.ComplaintsController.GetComplaints">
            <summary>
            Gets a list of all complaints
            </summary>
            <returns>IActionResult indicating the status of the operation</returns>
            <response code="200">Returns the list of complaints</response>
        </member>
        <member name="M:Gateway.API.Controllers.Complaint.ComplaintsController.PostComplaint(System.Object)">
            <summary>
            Adds a new complaint
            </summary>
            <param name="requestModel">Request body with complaint information</param>
            <returns>IActionResult indicating the status of the operation</returns>
            <response code="201">Returns the newly created complaint</response>
        </member>
        <member name="M:Gateway.API.Controllers.Complaint.ComplaintsController.PatchComplaint(System.String,System.Object)">
            <summary>
            Patches a system user
            </summary>
            <param name="id">id of the user to update</param>
            <param name="requestModel">Request body with updated complaint information</param>
            <returns>IActionResult indicating the status of the operation</returns>
            <response code="204">Returns no content</response>
        </member>
        <member name="T:Gateway.API.Helpers.HttpServiceProxy">
            <summary>
            Implementation of the IComplaintRepository
            interface for managing Complaint entities in the database.
            </summary>
        </member>
        <member name="M:Gateway.API.Helpers.HttpServiceProxy.#ctor(System.Net.Http.HttpClient,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gateway.API.Helpers.HttpServiceProxy"/> class.
            </summary>
            <param name="httpClient">The <see cref="T:System.Net.Http.HttpClient"/> used to make HTTP requests to the downstream service.</param>
            <param name="downstreamServiceUrl">The URL of the downstream service to proxy requests to.</param>
        </member>
        <member name="M:Gateway.API.Helpers.HttpServiceProxy.Get(System.String,System.String)">
            <inheritdoc cref="M:Gateway.API.Helpers.IHttpServiceProxy.Get(System.String,System.String)"/>
        </member>
        <member name="M:Gateway.API.Helpers.HttpServiceProxy.GetById(System.String,System.String)">
            <inheritdoc cref="M:Gateway.API.Helpers.IHttpServiceProxy.GetById(System.String,System.String)"/>
        </member>
        <member name="M:Gateway.API.Helpers.HttpServiceProxy.Post(System.Object,System.String,System.String)">
            <inheritdoc cref="M:Gateway.API.Helpers.IHttpServiceProxy.Post(System.Object,System.String,System.String)"/>
        </member>
        <member name="M:Gateway.API.Helpers.HttpServiceProxy.Patch(System.String,System.Object,System.String)">
            <inheritdoc cref="M:Gateway.API.Helpers.IHttpServiceProxy.Patch(System.String,System.Object,System.String)"/>
        </member>
        <member name="M:Gateway.API.Helpers.HttpServiceProxy.Delete(System.String,System.String)">
            <inheritdoc cref="M:Gateway.API.Helpers.IHttpServiceProxy.Delete(System.String,System.String)"/>
        </member>
        <member name="M:Gateway.API.Helpers.HttpServiceProxy.Put(System.String,System.Object,System.String)">
            <inheritdoc cref="M:Gateway.API.Helpers.IHttpServiceProxy.Put(System.String,System.Object,System.String)"/>
        </member>
        <member name="T:Gateway.API.Helpers.IHttpServiceProxy">
            <summary>
            A interface for proxy service that handles communication between an API and an external HTTP service.
            </summary>
        </member>
        <member name="M:Gateway.API.Helpers.IHttpServiceProxy.Get(System.String,System.String)">
            <summary>
            Sends a GET request to the specified endpoint of the external service.
            </summary>
            <param name="endpoint">The endpoint of the external service to send the request to. If empty, the base URL of the external service is used.</param>
            <param name="acceptHeader">The accept header to include in the request. If not provided, the response will be formatted as JSON.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the response from the external service.</returns>
        </member>
        <member name="M:Gateway.API.Helpers.IHttpServiceProxy.GetById(System.String,System.String)">
            <summary>
            Sends a GET request to the specified endpoint of the external service with a unique identifier.
            </summary>
            <param name="endpoint">The endpoint of the external service to send the request to, including the identifier.</param>
            <param name="acceptHeader">The accept header to include in the request. If not provided, the response will be formatted as JSON.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the response from the external service.</returns>
        </member>
        <member name="M:Gateway.API.Helpers.IHttpServiceProxy.Post(System.Object,System.String,System.String)">
            <summary>
            Sends a POST request to the specified endpoint of the external service with the specified request body.
            </summary>
            <param name="requestBody">The request body to send in the request.</param>
            <param name="endpoint">The endpoint of the external service to send the request to. If empty, the base URL of the external service is used.</param>
            <param name="acceptHeader">The accept header to include in the request. If not provided, the response will be formatted as JSON.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the response from the external service.</returns>
        </member>
        <member name="M:Gateway.API.Helpers.IHttpServiceProxy.Patch(System.String,System.Object,System.String)">
            <summary>
            Sends a PATCH request to the specified endpoint of the external service with the specified request body.
            </summary>
            <param name="endpoint">The endpoint of the external service to send the request to. If empty, the base URL of the external service is used.</param>
            <param name="requestBody">The request body to send in the request.</param>
            <param name="acceptHeader">The accept header to include in the request. If not provided, the response will be formatted as JSON.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the response from the external service.</returns>
        </member>
        <member name="M:Gateway.API.Helpers.IHttpServiceProxy.Put(System.String,System.Object,System.String)">
            <summary>
            Sends a PUT request to the specified endpoint of the external service.
            </summary>
            <param name="endpoint">The endpoint of the external service to send the request to, including the identifier.</param>
            <param name="requestBody">The request body to send in the request.</param>
            <param name="acceptHeader">The accept header to include in the request. If not provided, the response will be formatted as JSON.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the response from the external service.</returns>
        </member>
        <member name="M:Gateway.API.Helpers.IHttpServiceProxy.Delete(System.String,System.String)">
            <summary>
            Sends a DELETE request to the specified endpoint of the external service.
            </summary>
            <param name="endpoint">The endpoint of the external service to send the request to, including the identifier.</param>
            <param name="acceptHeader">The accept header to include in the request. If not provided, the response will be formatted as JSON.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> representing the response from the external service.</returns>
        </member>
        <member name="T:Gateway.API.Helpers.SwaggerOptionsMapper">
            <summary>
            This class maps SwaggerOptions to generate Swagger documentation and UI for different APIs.
            </summary>
        </member>
    </members>
</doc>
