// <auto-generated />
using System;
using Landlot.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Landlot.API.Migrations
{
    [DbContext(typeof(LandlotDbContext))]
    partial class LandlotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Landlot.API.Entities.Land", b =>
                {
                    b.Property<Guid>("LandGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Drainage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandCulture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandProcessing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProtectedZone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealEstateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalArea")
                        .HasColumnType("int");

                    b.HasKey("LandGuid");

                    b.ToTable("Lands");

                    b.HasData(
                        new
                        {
                            LandGuid = new Guid("3f84c3a3-34c2-48a0-93a1-f00af6c9b2ba"),
                            Drainage = "Odvodnjavanje",
                            LandClass = "III",
                            LandCulture = "Vrtovi",
                            LandProcessing = "Ostalo",
                            Municipality = "Bajmok",
                            PropertyType = "Drugi oblivi",
                            ProtectedZone = "3",
                            RealEstateNumber = "22",
                            TotalArea = 3000
                        },
                        new
                        {
                            LandGuid = new Guid("3f14c3a3-34c2-48a0-93a1-f00af6c9b2ba"),
                            Drainage = "Odvodnjavanje",
                            LandClass = "I",
                            LandCulture = "Livade",
                            LandProcessing = "Ostalo",
                            Municipality = "Bikovo",
                            PropertyType = "Privatna svojina",
                            ProtectedZone = "4",
                            RealEstateNumber = "1234",
                            TotalArea = 111
                        });
                });

            modelBuilder.Entity("Landlot.API.Entities.Lot", b =>
                {
                    b.Property<Guid>("LotGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DrainageState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandCultureState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LandGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LandProcessingState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LotArea")
                        .HasColumnType("int");

                    b.Property<int>("LotNumber")
                        .HasColumnType("int");

                    b.Property<string>("LotUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProtectedZoneState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LotGuid");

                    b.HasIndex("LandGuid");

                    b.ToTable("Lots");

                    b.HasData(
                        new
                        {
                            LotGuid = new Guid("67e0bcc7-db55-4726-8b3d-ee0dabed6de3"),
                            DrainageState = "Odvodnjavanje",
                            LandCultureState = "Vrtovi",
                            LandGuid = new Guid("3a84c3a3-34c2-48a0-93a1-f00af6c9b2ba"),
                            LandProcessingState = "Ostalo",
                            LotArea = 1234,
                            LotNumber = 1,
                            LotUser = "John Doe",
                            ProtectedZoneState = "1"
                        },
                        new
                        {
                            LotGuid = new Guid("61e0bcc7-db55-4726-8b3d-ee0dabed6de3"),
                            DrainageState = "Odvodnjavanje",
                            LandCultureState = "Njive",
                            LandGuid = new Guid("3c84c3a3-34c2-48a0-93a1-f00af6c9b2ba"),
                            LandProcessingState = "Obradivo",
                            LotArea = 4321,
                            LotNumber = 13,
                            LotUser = "Julia Roberts ",
                            ProtectedZoneState = "4"
                        });
                });

            modelBuilder.Entity("Landlot.API.Entities.Lot", b =>
                {
                    b.HasOne("Landlot.API.Entities.Land", "Land")
                        .WithMany("Lots")
                        .HasForeignKey("LandGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Land");
                });

            modelBuilder.Entity("Landlot.API.Entities.Land", b =>
                {
                    b.Navigation("Lots");
                });
#pragma warning restore 612, 618
        }
    }
}
