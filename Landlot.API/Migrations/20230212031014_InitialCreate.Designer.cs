// <auto-generated />
using System;
using Landlot.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Landlot.API.Migrations
{
    [DbContext(typeof(LandlotDbContext))]
    [Migration("20230212031014_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Landlot.API.Entities.Land", b =>
                {
                    b.Property<Guid>("LandGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Drainage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandCulture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandProcessing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MunicipalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProtectedZone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealEstateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalArea")
                        .HasColumnType("int");

                    b.HasKey("LandGuid");

                    b.ToTable("Lands");

                    b.HasData(
                        new
                        {
                            LandGuid = new Guid("3f84c3a3-34c2-48a0-93a1-f00af6c9b2ba"),
                            Drainage = "Excellent",
                            LandClass = "1",
                            LandCulture = "Field",
                            LandProcessing = "Arable",
                            Municipality = "Bajmok",
                            MunicipalityId = new Guid("aa3f2265-7182-4424-ba83-2eed388ce748"),
                            PropertyType = "Private",
                            ProtectedZone = "III",
                            RealEstateNumber = "2",
                            TotalArea = 3000
                        });
                });

            modelBuilder.Entity("Landlot.API.Entities.Lot", b =>
                {
                    b.Property<Guid>("LandGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LotGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DrainageState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandCultureState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandProcessingState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LotArea")
                        .HasColumnType("int");

                    b.Property<int>("LotNumber")
                        .HasColumnType("int");

                    b.Property<string>("LotUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProtectedZoneState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LandGuid", "LotGuid");

                    b.ToTable("Lots");

                    b.HasData(
                        new
                        {
                            LandGuid = new Guid("3f84c3a3-34c2-48a0-93a1-f00af6c9b2ba"),
                            LotGuid = new Guid("67e0bcc7-db55-4726-8b3d-ee0dabed6de3"),
                            DrainageState = "Good",
                            LandCultureState = "Field",
                            LandProcessingState = "Arable",
                            LotArea = 1234,
                            LotNumber = 1,
                            LotUser = "John Doe",
                            ProtectedZoneState = "II"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
