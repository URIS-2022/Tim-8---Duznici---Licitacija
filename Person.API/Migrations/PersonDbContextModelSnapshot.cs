// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Person.API.Data;

#nullable disable

namespace Person.API.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    partial class PersonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Person.API.Entities.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = new Guid("9a8e31d5-5e7b-46e7-80c6-f22e607ee907"),
                            Country = 0,
                            Place = "Beograd",
                            Street = "Njegoseva",
                            StreetNumber = "21",
                            ZipCode = "11000"
                        });
                });

            modelBuilder.Entity("Person.API.Entities.ContactPerson", b =>
                {
                    b.Property<Guid>("ContactPersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactPersonId");

                    b.ToTable("ContactPersons");

                    b.HasData(
                        new
                        {
                            ContactPersonId = new Guid("a43a31f7-ffad-4aff-a199-1a6d31a8b850"),
                            FirstName = "Petar",
                            Function = "Generalni direktor",
                            LastName = "Milanovic",
                            PhoneNumber = "0639444271"
                        });
                });

            modelBuilder.Entity("Person.API.Entities.LegalPerson", b =>
                {
                    b.Property<Guid>("LegalPersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LegalPersonId");

                    b.HasIndex("ContactPersonId");

                    b.ToTable("LegalPersons");

                    b.HasData(
                        new
                        {
                            LegalPersonId = new Guid("8de0c01b-b7b0-4df2-9009-3df21b91a0bb"),
                            AccountNumber = "7654321",
                            AddressId = new Guid("8de0c01b-b7b0-4df2-9234-3df21b91a0bb"),
                            ContactPersonId = new Guid("a43a31f7-ffad-4aff-a199-1a6d31a8b850"),
                            Email = "vaskons@yahoo.com",
                            Fax = "1110222",
                            IdentificationNumber = "16050",
                            Name = "Vaskons",
                            PhoneNumber1 = "0613263358",
                            PhoneNumber2 = "0603377409"
                        });
                });

            modelBuilder.Entity("Person.API.Entities.PhysicalPerson", b =>
                {
                    b.Property<Guid>("PhysicalPersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jmbg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhysicalPersonId");

                    b.ToTable("PhysicalPersons");

                    b.HasData(
                        new
                        {
                            PhysicalPersonId = new Guid("8de0c01b-b7b0-4df2-9009-3df21b91a0bb"),
                            AccountNumber = "1234567",
                            AddressId = new Guid("8de0c01b-b7b0-4df2-9000-3df21b91a0bb"),
                            Email = "luka123@gmail.com",
                            FirstName = "Luka",
                            Jmbg = "1234567876543",
                            LastName = "Lukic",
                            PhoneNumber1 = "0652632633",
                            PhoneNumber2 = "0622402001"
                        });
                });

            modelBuilder.Entity("Person.API.Entities.LegalPerson", b =>
                {
                    b.HasOne("Person.API.Entities.ContactPerson", "ContactPerson")
                        .WithMany()
                        .HasForeignKey("ContactPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactPerson");
                });
#pragma warning restore 612, 618
        }
    }
}
