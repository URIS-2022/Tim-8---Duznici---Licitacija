// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Payment.API.Data;

#nullable disable

namespace Payment.API.Migrations
{
    [DbContext(typeof(PaymentDBContext))]
    partial class PaymentDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Payment.API.Entities.Payment", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PayerGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("PublicBiddingGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Guid");

                    b.HasIndex("ReferenceNumber");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("56277ee2-3d28-4cde-8e6d-d2397342fc9d"),
                            AccountNumber = "323024329",
                            PayerGuid = new Guid("e31726fb-23a4-4f1b-a335-4354a96d052b"),
                            PaymentDate = new DateTime(2021, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentTitle = "Sample Payment",
                            PublicBiddingGuid = new Guid("f488b81f-ff6e-4ce1-aea9-050b085b6849"),
                            ReferenceNumber = "PW-1234",
                            TotalAmount = 230m
                        });
                });

            modelBuilder.Entity("Payment.API.Entities.PaymentWarrant", b =>
                {
                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PayerGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PublicBiddingGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ReferenceNumber");

                    b.ToTable("PaymentWarrants");

                    b.HasData(
                        new
                        {
                            ReferenceNumber = "PW-1234",
                            Guid = new Guid("e1cd0010-b413-4b81-841d-2bc234b34c85"),
                            PayerGuid = new Guid("ec856b7c-278d-4877-afc7-83405a3259bb"),
                            PublicBiddingGuid = new Guid("af3ad9df-c61c-4229-958f-e2b5f96870d7"),
                            TotalAmount = 100.50m
                        });
                });

            modelBuilder.Entity("Payment.API.Entities.Payment", b =>
                {
                    b.HasOne("Payment.API.Entities.PaymentWarrant", "PaymentWarrant")
                        .WithMany("Payments")
                        .HasForeignKey("ReferenceNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentWarrant");
                });

            modelBuilder.Entity("Payment.API.Entities.PaymentWarrant", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
