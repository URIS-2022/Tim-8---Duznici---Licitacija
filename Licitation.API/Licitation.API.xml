<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Licitation.API</name>
    </assembly>
    <members>
        <member name="M:Licitation.API.Controllers.DocumentsController.#ctor(Licitation.API.Data.Repository.IDocumentRepository,AutoMapper.IMapper)">
            <summary>
            Initializes a new instance of the DocumentsController class
            </summary>
            <param name="documentRepository">An instance of IDocumentRepository to handle the Documents</param>
            <param name="mapper">An instance of IMapper to map between Document entities and models</param>
        </member>
        <member name="M:Licitation.API.Controllers.DocumentsController.GetDocuments">
            <summary>
            Returns a list of System Users
            </summary>
            <returns>A list of System User models, or No Content if no System User found</returns>
        </member>
        <member name="M:Licitation.API.Controllers.LicitationController.#ctor(Licitation.API.Data.Repository.ILicitationRepository,Licitation.API.Data.Repository.ILicitationLandRepository,AutoMapper.IMapper)">
            <summary>
            Initializes a new instance of the LicitacionController class
            </summary>
            <param name="licitationRepository">An instance of ILicitacionRepository to handle the Licitacions</param>
            <param name="mapper">An instance of IMapper to map between Licitacion entities and models</param>
        </member>
        <member name="M:Licitation.API.Controllers.LicitationController.GetLicitations">
            <summary>
            Returns a list of Licitacions
            </summary>
            <returns>A list of Licitacion models, or No Content if no Licitacion found</returns>
        </member>
        <member name="M:Licitation.API.Controllers.LicitationController.PostLicitation(Licitation.API.Models.Licitation.LicitationRequestModel)">
            <summary>
            Creates a new Licitation
            </summary>
            <param name="requestModel">The new Licitation information</param>
            <returns>The created Licitation model, with a location header pointing to the URL of the newly created Licitation</returns>
        </member>
        <member name="T:Licitation.API.Data.Repository.DocumentRepository">
            <summary>
            Implementation of the IDocumentRepository
            interface for managing Document entities in the database.
            </summary>
        </member>
        <member name="M:Licitation.API.Data.Repository.DocumentRepository.#ctor(Licitation.API.Data.LicitationDBContext)">
            <summary>
            Initializes a new instance of the DocumentRepository class.
            </summary>
            <param name="context">The database context to use for data access.</param>
        </member>
        <member name="M:Licitation.API.Data.Repository.DocumentRepository.GetDocuments">
            <inheritdoc cref="M:Licitation.API.Data.Repository.IDocumentRepository.GetDocuments"/>
        </member>
        <member name="M:Licitation.API.Data.Repository.DocumentRepository.GetDocument(System.Guid)">
            <inheritdoc cref="M:Licitation.API.Data.Repository.IDocumentRepository.GetDocument(System.Guid)"/>
        </member>
        <member name="M:Licitation.API.Data.Repository.DocumentRepository.UpdateDocument(System.Guid,Licitation.API.Entities.Document)">
            <inheritdoc cref="M:Licitation.API.Data.Repository.IDocumentRepository.UpdateDocument(System.Guid,Licitation.API.Entities.Document)"/>
        </member>
        <member name="M:Licitation.API.Data.Repository.DocumentRepository.AddDocument(Licitation.API.Entities.Document)">
            <inheritdoc cref="M:Licitation.API.Data.Repository.IDocumentRepository.AddDocument(Licitation.API.Entities.Document)"/>
        </member>
        <member name="M:Licitation.API.Data.Repository.DocumentRepository.DeleteDocument(System.Guid)">
            <inheritdoc cref="M:Licitation.API.Data.Repository.IDocumentRepository.DeleteDocument(System.Guid)"/>
        </member>
        <member name="T:Licitation.API.Data.Repository.IDocumentRepository">
            <summary>
            The interface for document repository, provides methods for getting, updating, adding and deleting a document
            </summary>
        </member>
        <member name="M:Licitation.API.Data.Repository.IDocumentRepository.GetDocuments">
            <summary>
            Gets a list of all documents.
            </summary>
            <returns>A list of documents.</returns>
        </member>
        <member name="M:Licitation.API.Data.Repository.IDocumentRepository.GetDocument(System.Guid)">
            <summary>
            Gets a specific document by its identifier.
            </summary>
            <param name="id">The identifier of the document.</param>
            <returns>The document with the specified identifier.</returns>
        </member>
        <member name="M:Licitation.API.Data.Repository.IDocumentRepository.UpdateDocument(System.Guid,Licitation.API.Entities.Document)">
            <summary>
            Updates a specific document.
            </summary>
            <param name="id">The identifier of the document to update.</param>
            <param name="patchDocument">The updated values for the document.</param>
            <returns>The updated document.</returns>
        </member>
        <member name="M:Licitation.API.Data.Repository.IDocumentRepository.AddDocument(Licitation.API.Entities.Document)">
            <summary>
            Adds a new document.
            </summary>
            <param name="document">The document to add.</param>
            <returns>The added document.</returns>
        </member>
        <member name="M:Licitation.API.Data.Repository.IDocumentRepository.DeleteDocument(System.Guid)">
            <summary>
            Deletes a specific document.
            </summary>
            <param name="id">The identifier of the document to delete.</param>
            <returns>The deleted document.</returns>
        </member>
        <member name="M:Licitation.API.Data.Repository.ILicitationLandRepository.GetLicitationLand(System.Guid,System.Guid)">
            <summary>
            Gets a specific committee member by its identifier.
            </summary>
            <param name="licitationId">The identifier of the Committee.</param>
            /// <param name="licitationLandId">The id of member to add.</param>
            <returns>The member with the specified identifier.</returns>
        </member>
        <member name="M:Licitation.API.Data.Repository.ILicitationLandRepository.AddLicitationLand(Licitation.API.Entities.LicitationLand)">
            <summary>
            Adds a new member to committee.
            </summary>
            <param name="licitationLand">The request format for adding member to commitee.</param>
            <returns>The added committee member.</returns>
        </member>
        <member name="M:Licitation.API.Data.Repository.ILicitationLandRepository.DeleteLicitationLand(System.Guid,System.Guid)">
            <summary>
            Removes a specific member from committee.
            </summary>
            <param name="licitationId">The identifier of the committee member to delete.</param>
            /// <param name="licitationLandId">The id of member to remove.</param>
            <returns>The deleted committee member.</returns>
        </member>
        <member name="T:Licitation.API.Data.Repository.ILicitationRepository">
            <summary>
            Repository for managing Licitation entities.
            </summary>
        </member>
        <member name="M:Licitation.API.Data.Repository.ILicitationRepository.GetAll">
            <summary>
            Gets all Licitations from the database.
            </summary>
            <returns>An asynchronous task that returns an enumerable of Licitations entities.</returns>
        </member>
        <member name="M:Licitation.API.Data.Repository.ILicitationRepository.GetByGuid(System.Guid)">
            <summary>
            Gets a Licitation by its Guid identifier.
            </summary>
            <param name="id">The Guid identifier of the Licitation.</param>
            <returns>An asynchronous task that returns the Licitation entity with the specified Guid identifier, or null if no such entity exists.</returns>
        </member>
        <member name="M:Licitation.API.Data.Repository.ILicitationRepository.Delete(System.Guid)">
            <summary>
            Deletes a Licitation from the database by its Guid identifier.
            </summary>
            <param name="id">The Guid identifier of the Licitation to delete.</param>
            <returns>An asynchronous task that represents the operation.</returns>
        </member>
        <member name="M:Licitation.API.Data.Repository.ILicitationRepository.AddLicitation(Licitation.API.Entities.Licitation)">
            <summary>
            Adds a new Licitation to the database.
            </summary>
            <param name="licitation">The Licitation entity to add to the database.</param>
            <returns>An asynchronous task that returns the added Licitation entity.</returns>
        </member>
        <member name="M:Licitation.API.Data.Repository.ILicitationRepository.UpdateLicitation(System.Guid,Licitation.API.Entities.Licitation)">
            <summary>
            Updates a specific licitation.
            </summary>
            <param name="id">The identifier of the licitation to update.</param>
            <param name="patchDocument">The updated values for the licitation.</param>
            <returns>The updated licitation.</returns>
        </member>
        <member name="M:Licitation.API.Data.Repository.LicitationLandRepository.#ctor(Licitation.API.Data.LicitationDBContext)">
            <summary>
            Initializes a new instance of the CommitteeMemberRepository class.
            </summary>
            <param name="context">The database context to use for data access.</param>
        </member>
        <member name="M:Licitation.API.Data.Repository.LicitationLandRepository.GetLicitationLand(System.Guid,System.Guid)">
            <inheritdoc cref="M:Licitation.API.Data.Repository.ILicitationLandRepository.GetLicitationLand(System.Guid,System.Guid)"/>
        </member>
        <member name="M:Licitation.API.Data.Repository.LicitationLandRepository.AddLicitationLand(Licitation.API.Entities.LicitationLand)">
            <inheritdoc cref="M:Licitation.API.Data.Repository.ILicitationLandRepository.AddLicitationLand(Licitation.API.Entities.LicitationLand)"/>
            
        </member>
        <member name="M:Licitation.API.Data.Repository.LicitationLandRepository.DeleteLicitationLand(System.Guid,System.Guid)">
            <inheritdoc cref="M:Licitation.API.Data.Repository.ILicitationLandRepository.DeleteLicitationLand(System.Guid,System.Guid)"/>
        </member>
        <member name="T:Licitation.API.Data.Repository.LicitationRepository">
            <summary>
            Implementation of the ISystemUserRepository
            interface for managing SystemUser entities in the database.
            </summary>
        </member>
        <member name="M:Licitation.API.Data.Repository.LicitationRepository.#ctor(Licitation.API.Data.LicitationDBContext)">
            <summary>
            Initializes a new instance of the LicitationRepository class.
            </summary>
            <param name="context">The database context to use for data access.</param>
        </member>
        <member name="M:Licitation.API.Data.Repository.LicitationRepository.GetAll">
            <inheritdoc cref="!:IComplaintRepository.GetAll"/>
        </member>
        <member name="M:Licitation.API.Data.Repository.LicitationRepository.GetByGuid(System.Guid)">
            <inheritdoc cref="M:Licitation.API.Data.Repository.ILicitationRepository.GetByGuid(System.Guid)"/>
        </member>
        <member name="M:Licitation.API.Data.Repository.LicitationRepository.Delete(System.Guid)">
            <inheritdoc cref="M:Licitation.API.Data.Repository.ILicitationRepository.Delete(System.Guid)"/>
        </member>
        <member name="M:Licitation.API.Data.Repository.LicitationRepository.AddLicitation(Licitation.API.Entities.Licitation)">
            <inheritdoc cref="M:Licitation.API.Data.Repository.ILicitationRepository.AddLicitation(Licitation.API.Entities.Licitation)"/>
        </member>
        <member name="M:Licitation.API.Data.Repository.LicitationRepository.UpdateLicitation(System.Guid,Licitation.API.Entities.Licitation)">
            <inheritdoc cref="M:Licitation.API.Data.Repository.ILicitationRepository.UpdateLicitation(System.Guid,Licitation.API.Entities.Licitation)"/>
        </member>
        <member name="T:Licitation.API.Entities.Document">
            <summary>
            Represents a document entity with its properties and methods.
            </summary>
        </member>
        <member name="P:Licitation.API.Entities.Document.Guid">
            <summary>
            Gets or sets the unique identifier of the document.
            </summary>
        </member>
        <member name="P:Licitation.API.Entities.Document.LicitationGuid">
            <summary>
            Gets or sets the unique identifier of the announcement.
            </summary>
        </member>
        <member name="P:Licitation.API.Entities.Document.DocumentType">
            <summary>
            Gets or sets the type of the document.
            </summary>
        </member>
        <member name="P:Licitation.API.Entities.Document.ReferenceNumber">
            <summary>
            Gets or sets the reference number of the document.
            </summary>
        </member>
        <member name="P:Licitation.API.Entities.Document.DateSubmitted">
            <summary>
            Gets or sets the date when the document was submitted.
            </summary>
        </member>
        <member name="P:Licitation.API.Entities.Document.DateCertified">
            <summary>
            Gets or sets the date when the document was certified.
            </summary>
        </member>
        <member name="P:Licitation.API.Entities.Document.Template">
            <summary>
            Gets or sets the template of the document.
            </summary>
        </member>
        <member name="M:Licitation.API.Entities.Document.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Licitation.API.Entities.Document"/> class.
            </summary>
        </member>
        <member name="M:Licitation.API.Entities.Document.#ctor(System.Guid,System.Guid,Licitation.API.Enums.DocumentType,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Licitation.API.Entities.Document"/> class with the specified parameters.
            </summary>
            <param name="id">The unique identifier of the document.</param>
            <param name="licitationGuid">The unique identifier of the announcement.</param>
            <param name="documentType">The type of the document.</param>
            <param name="documentStatus">The status of the document.</param>
            <param name="referenceNumber">The reference number of the document.</param>
            <param name="dateSubmitted">The date when the document was submitted.</param>
            <param name="dateCertified">The date when the document was certified.</param>
            <param name="template">The template of the document.</param>
        </member>
        <member name="M:Licitation.API.Entities.Document.#ctor(System.Guid,Licitation.API.Enums.DocumentType,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the Document class with a new Guid.
            </summary>
            <param name="licitationGuid">The unique identifier of the announcement that this Document is associated with.</param>
            <param name="documentType">The type of the Document.</param>
            <param name="referenceNumber">The reference number of the Document.</param>
            <param name="dateSubmitted">The date when the Document was submitted.</param>
            <param name="dateCertified">The date when the Document was certified.</param>
            <param name="template">The template of the Document.</param>
        </member>
        <member name="M:Licitation.API.Entities.Document.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates the Document entity.
            </summary>
            <param name="validationContext">The validation context.</param>
            <returns>A collection of ValidationResult objects that represent the validation errors.</returns>
        </member>
        <member name="T:Licitation.API.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:Licitation.API.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Licitation.API.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Licitation.API.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Licitation.API.Profiles.LicitationLicitationLandProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Licitation.API.Entities.LicitationLand"/> class and sets up mappings between
            <see cref="T:Licitation.API.Entities.LicitationLand"/> and its corresponding response/request models.
            </summary>
        </member>
    </members>
</doc>
