// <auto-generated />
using System;
using Lease.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lease.API.Migrations
{
    [DbContext(typeof(LeaseDbContext))]
    partial class LeaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lease.API.Entities.Buyer", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ban")
                        .HasColumnType("bit");

                    b.Property<int>("BanDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("BanEndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BiddingGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Priorities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RealisedArea")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateOfBan")
                        .HasColumnType("datetime2");

                    b.HasKey("Guid");

                    b.HasIndex("PersonGuid");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("Lease.API.Entities.Document", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCertified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSubbmitted")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LeaseAgreementGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Template")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.HasIndex("LeaseAgreementGuid");

                    b.HasIndex("ReferenceNumber")
                        .IsUnique();

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Lease.API.Entities.DueDate", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Guid");

                    b.ToTable("DueDates");
                });

            modelBuilder.Entity("Lease.API.Entities.LeaseAgreement", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BiddingGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfSigning")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRecording")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeadlineLandReturn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("DueDateGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GuaranteeType")
                        .HasColumnType("int");

                    b.Property<Guid>("MinisterGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlaceOfSigning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Guid");

                    b.HasIndex("DueDateGuid");

                    b.HasIndex("ReferenceNumber")
                        .IsUnique();

                    b.ToTable("LeaseAgreements");
                });

            modelBuilder.Entity("Lease.API.Entities.Buyer", b =>
                {
                    b.HasOne("Lease.API.Entities.LeaseAgreement", "LeaseAgreement")
                        .WithOne("Buyer")
                        .HasForeignKey("Lease.API.Entities.Buyer", "PersonGuid")
                        .HasPrincipalKey("Lease.API.Entities.LeaseAgreement", "PersonGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaseAgreement");
                });

            modelBuilder.Entity("Lease.API.Entities.Document", b =>
                {
                    b.HasOne("Lease.API.Entities.LeaseAgreement", "LeaseAgreement")
                        .WithMany("Documents")
                        .HasForeignKey("LeaseAgreementGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaseAgreement");
                });

            modelBuilder.Entity("Lease.API.Entities.LeaseAgreement", b =>
                {
                    b.HasOne("Lease.API.Entities.DueDate", "DueDate")
                        .WithMany("LeaseAgreements")
                        .HasForeignKey("DueDateGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DueDate");
                });

            modelBuilder.Entity("Lease.API.Entities.DueDate", b =>
                {
                    b.Navigation("LeaseAgreements");
                });

            modelBuilder.Entity("Lease.API.Entities.LeaseAgreement", b =>
                {
                    b.Navigation("Buyer")
                        .IsRequired();

                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
